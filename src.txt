//
// Created by ahmed on 11/14/17.
//

#include "DFA_Reducer.h"
#include <fstream>
#include <iomanip>

DFA_Reducer::DFA_Reducer(Graph *dfa, set<char> language_chars) {
    this->dfa = dfa;
    this->language_chars = std::move(language_chars);
}

Graph *DFA_Reducer::get_dfa() const {
    return this->dfa;
}

void DFA_Reducer::minimize() {
    int partition_count = this->merge_non_distinguishable();
    this->build_minimized_dfa(partition_count);
}

void DFA_Reducer::log(ofstream *log_file) {
    *log_file << "\n\n\nMinimized DFA:\n";

    set<State *> states = this->dfa->get_states();
    string line = "-----------------------------";
    for (unsigned int i = 0; i < language_chars.size(); ++i)
        line += "-------";

    *log_file << line << "\n                              ";
    for (auto &input: this->language_chars)
        *log_file << "| " << setw(5) << input;

    *log_file << "\n" << line << "\n";
    for (auto &state: states) {
        if (state->is_input_state())
            *log_file << " ➜ |";
        else
            *log_file << "   |";

        if (state->is_accept_state())
            *log_file << " " << setw(12) << state->get_token_name() << " |";
        else
            *log_file << "              |";

        *log_file << setw(5) << state->get_id() << "  =>  ";
        for (auto &next_state: state->get_transitions())
            *log_file << "| " << setw(5) << next_state.second->get_id();
        *log_file << endl;
    }
    *log_file << line << endl;
}

int DFA_Reducer::merge_non_distinguishable() {
    int partition_count = 2; // starting with two partitions accept states & non-accept states
    map<int, set<State *> > disjoint_set;

    // Create initial two sets, accepting and non-accepting states
    for (auto &state: this->get_dfa()->get_states()) {
        if (state->is_accept_state()) {
            disjoint_set[1].insert(state);
            this->old_state_mapper[state] = 1;
        } else {
            disjoint_set[2].insert(state);
            this->old_state_mapper[state] = 2;
        }
    }

    bool flag = true;
    while (flag) {
        flag = false;
        // loop all partitions
        for (auto &partition: disjoint_set) {
            // loop all states in the same partitions
            set<State *> partition_states = partition.second;

            for (auto &stateA: partition_states) {
                set<State *> cur_set;
                cur_set.insert(stateA);
                for (auto &stateB: partition_states) {
                    if (stateA == stateB) continue;

                    bool may_match = (stateA->is_input_state() == stateB->is_input_state());
                    may_match = may_match && (stateA->is_accept_state() == stateB->is_accept_state());
                    may_match = may_match && (stateA->get_token_name() == stateB->get_token_name());
                    if (!may_match) continue;

                    bool in_same_set = true;
                    for (char c: this->language_chars) {
                        State *a_on_c = stateA->get_transition_on(c);
                        State *b_on_c = stateB->get_transition_on(c);
                        if (old_state_mapper[a_on_c] != old_state_mapper[b_on_c]) {
                            in_same_set = false;
                            break;
                        }
                    }
                    // if stateA matches stateB for each char c
                    if (in_same_set)
                        cur_set.insert(stateB);
                }
                // if this partitions needs minimization
                if (cur_set.size() != partition_states.size()) {
                    // this partitions is split
                    flag = true;

                    partition_count++;
                    // insert new partition
                    disjoint_set[partition_count] = cur_set;
                    // loop all the states of new set and move to new partitions
                    for (auto &state: cur_set) {
                        partition_states.erase(state);
                        old_state_mapper[state] = partition_count;
                    }
                    // update current partition with remaining states
                    disjoint_set[partition.first] = partition_states;
                    break;
                }
            }
            if (flag) break;
        }
    }
    return partition_count;
}

void DFA_Reducer::build_minimized_dfa(int partition_count) {
    set<int> min_states;

    // Form transition_table table
    for (auto &state: this->old_state_mapper) {
        min_states.insert(state.second);
        for (auto &move: state.first->get_transitions()) {
            pair<int, char> cur_pair = make_pair(this->old_state_mapper[state.first], move.first);
            this->transition_table[cur_pair] = this->old_state_mapper[move.second];
        }
    }

    // Building new min_dfa
    delete (this->dfa);
    this->dfa = new Graph();

    // Add states to the new min_dfa
    for (int i = 1; i <= partition_count; ++i) {
        auto *dummy = new State();
        dummy->set_id((unsigned int) i);
        dfa->insert_state(dummy);
        for (auto &state: this->old_state_mapper) {
            if (state.second == i) {
                if (state.first->is_input_state()) {
                    dummy->set_input_state(true);
                    this->dfa->set_start_state(dummy);
                }
                if (state.first->is_accept_state()) {
                    // if this state priority > current priority, set token name to the highest priority
                    if (state.first->get_priority() > dummy->get_priority())
                        dummy->set_accept_state(state.first->get_token_name());
                }
            }
        }
        this->new_state_mapper[i] = dummy;
    }

    // Add transitions to each state
    for (auto &state_id: min_states) {
        State *cur = this->new_state_mapper.at(state_id);
        for (auto &input: this->language_chars) {
            State *next_state = this->new_state_mapper[this->transition_table[make_pair(state_id, input)]];
            cur->add_transition(input, next_state);
        }
    }

    // Release old DFA pointers
    for (auto &old_state: this->old_state_mapper)
        delete (old_state.first);
}

void DFA_Reducer::tokenize(string file_path) {
    ifstream file(file_path, ios_base::in);
    string source_code;

    while (true) {
        int c = file.get();
        if (c == EOF) {
            this->tokenizer(source_code);
            break;
        }
        if (c == ' ' || c == '\t' || c == '\n') {
            if (!source_code.empty()) {
                this->tokenizer(source_code);
                source_code = "";
            }
            continue;
        }
        source_code.push_back((char) c);
    }
    file.close();
}

void DFA_Reducer::tokenizer(string source_code) {
    unsigned int start = 0, end = 0;
    unsigned int lexeme_end = 0;
    string token, lexeme;
    State *cur_state = this->dfa->get_start_state();

    // space is the end of string flag
    source_code.push_back(' ');
    while (start != source_code.size() - 1) {
        char c = source_code[end];

        // if this char is not in the language chars && not end of string
        if (this->language_chars.find(c) == this->language_chars.end() && c != ' ') {
            source_code.erase(end, 1);
            printf("lexical_error: unknown character \'%c\'\n", c);
            continue;
        }

        end++;
        // if reached end of string, return the longest token found
        if (start < end && end == source_code.size()) {
            lexeme = source_code.substr(start, lexeme_end - start);
            tokens.push(make_pair(lexeme, token));
            printf("%-20s =>    %s\n", token.c_str(), lexeme.c_str());
            end = start = lexeme_end;
            cur_state = this->dfa->get_start_state();
            continue;
        }

        cur_state = cur_state->get_transition_on(c);
        if (cur_state->is_accept_state()) {
            token = cur_state->get_token_name();
            lexeme_end = end;
        }
    }

}
➜  dfa_reduction git:(master) ..
➜  lexical-analyzer git:(master) cat lex-log.txt
Definitions:
  digit: (0|1|2|3|4|5|6|7|8|9)
  digits: (0|1|2|3|4|5|6|7|8|9)+
  letter: ((a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z)|(A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z))


Expressions:
  addop: \+-|
  assign: =
  boolean: bo.o.l.e.a.n.
  else: el.s.e.
  float: fl.o.a.t.
  id: ab|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|AB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z||ab|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|AB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z||01|2|3|4|5|6|7|8|9||*.
  if: if.
  int: in.t.
  mulop: \*/|
  num: 01|2|3|4|5|6|7|8|9|+01|2|3|4|5|6|7|8|9|+\..01|2|3|4|5|6|7|8|9|+.\LE01|2|3|4|5|6|7|8|9|+.|.|
  punctuation: ;,|\(|\)|{|}|
  relop: \=\=.!\=.|>|>\=.|<|<\=.|
  while: wh.i.l.e.


Language:
  ! ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 ; < = > A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z { }

Expressions Vector:
  boolean: bo.o.l.e.a.n.
  int: in.t.
  float: fl.o.a.t.
  if: if.
  else: el.s.e.
  while: wh.i.l.e.
  id: ab|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|AB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z||ab|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|AB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z||01|2|3|4|5|6|7|8|9||*.
  num: 01|2|3|4|5|6|7|8|9|+01|2|3|4|5|6|7|8|9|+\..01|2|3|4|5|6|7|8|9|+.\LE01|2|3|4|5|6|7|8|9|+.|.|
  relop: \=\=.!\=.|>|>\=.|<|<\=.|
  assign: =
  punctuation: ;,|\(|\)|{|}|
  addop: \+-|
  mulop: \*/|




NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 734 is accepting, it's token name is: mulop
NFA state with ID: 728 is accepting, it's token name is: addop
NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 728 is accepting, it's token name is: addop
NFA state with ID: 734 is accepting, it's token name is: mulop
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 700 is accepting, it's token name is: assign
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 722 is accepting, it's token name is: punctuation
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 698 is accepting, it's token name is: relop
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 34 is accepting, it's token name is: if
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 20 is accepting, it's token name is: int
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 42 is accepting, it's token name is: else
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 668 is accepting, it's token name is: num
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 30 is accepting, it's token name is: float
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected
NFA state with ID: 52 is accepting, it's token name is: while
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected
NFA state with ID: 506 is accepting, it's token name is: id
NFA state with ID: 14 is accepting, it's token name is: boolean
Found two NFA accepting states mapping to the same DFA state.One of the tokens will never be detected



Minimized DFA:

                              | !    | (    | )    | *    | +    | ,    | -    | .    | /    | 0    | 1    | 2    | 3    | 4    | 5    | 6    | 7    | 8    | 9    | ;    | <    | =    | >    | A    | B    | C    | D    | E    | F    | G    | H    | I    | J    | K    | L    | M    | N    | O    | P    | Q    | R    | S    | T    | U    | V    | W    | X    | Y    | Z    | a    | b    | c    | d    | e    | f    | g    | h    | i    | j    | k    | l    | m    | n    | o    | p    | q    | r    | s    | t    | u    | v    | w    | x    | y    | z    | {    | }

   | mulop        |1      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
 ➜ |              |2      =>  | 17   | 10   | 10   | 1    | 7    | 10   | 7    | 18   | 1    | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 10   | 9    | 8    | 9    | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 39   | 40   | 40   | 34   | 32   | 40   | 40   | 22   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 37   | 40   | 40   | 40   | 10   | 10
   | id           |3      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 15   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | relop        |4      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | num          |5      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | int          |6      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | addop        |7      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | assign       |8      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 4    | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | relop        |9      =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 4    | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | punctuation  |10     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | if           |11     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | else         |12     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | float        |13     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | while        |14     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | boolean      |15     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   |              |16     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   |              |17     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 4    | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   |              |18     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | id           |19     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 3    | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |20     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 12   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |21     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 6    | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |22     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 11   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 21   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |23     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 13   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |24     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 14   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | num          |25     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 16   | 18   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 25   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | num          |26     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 26   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 27   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   |              |27     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 5    | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18
   | id           |28     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 29   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |29     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 23   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |30     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 24   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |31     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 20   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |32     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 28   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |33     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 19   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |34     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 31   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |35     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 30   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |36     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 38   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |37     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 35   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |38     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 33   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |39     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 36   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18
   | id           |40     =>  | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18   | 18   | 18   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 40   | 18   | 18

➜  lexical-analyzer git:(master) sudo apt update
[sudo] password for ahmed:
Ign:1 http://dl.google.com/linux/chrome/deb stable InRelease
Hit:2 http://ppa.launchpad.net/fixnix/netspeed/ubuntu xenial InRelease
Hit:3 http://eg.archive.ubuntu.com/ubuntu xenial InRelease
Hit:4 http://dl.google.com/linux/chrome/deb stable Release
Get:5 http://eg.archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:7 http://ppa.launchpad.net/papirus/papirus/ubuntu xenial InRelease
Hit:9 http://repository.spotify.com stable InRelease
Hit:10 https://deb.nodesource.com/node_8.x xenial InRelease
Hit:11 http://ppa.launchpad.net/tista/adapta/ubuntu xenial InRelease
Get:12 http://eg.archive.ubuntu.com/ubuntu xenial-backports InRelease [102 kB]
Get:13 https://dl.yarnpkg.com/debian stable InRelease [11.5 kB]
Hit:14 http://ppa.launchpad.net/webupd8team/java/ubuntu xenial InRelease
Get:15 http://eg.archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [307 kB]
Get:16 http://eg.archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [217 kB]
Get:17 http://eg.archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [185 kB]
Get:18 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [62.4 kB]
Get:19 http://eg.archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [266 kB]
Get:20 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [62.1 kB]
Get:21 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:22 http://eg.archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,892 B]
Get:23 http://eg.archive.ubuntu.com/ubuntu xenial-backports/main amd64 DEP-11 Metadata [3,324 B]
Get:24 http://eg.archive.ubuntu.com/ubuntu xenial-backports/universe amd64 DEP-11 Metadata [4,672 B]
Get:25 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [85.1 kB]
Fetched 1,569 kB in 2s (697 kB/s)
Reading package lists... Done
Building dependency tree
Reading state information... Done
All packages are up to date.
➜  lexical-analyzer git:(master)
